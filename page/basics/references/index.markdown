Нужно е да разбирате референциите. Това обаче е <i>най-трудната</i> и времеемка
част ѿ усвояванаето на Perl. Ако усвоите референциите, ще можете да четете и
пишете код на Perl. <i>Непременно прочетете „Най-важнѿо за запомняне”
по-долу.</i>

#### Какво е референция?
Референцията е като указател. Представлява скаларна променлива, съдържаща
адреса на друга стойност. Perl няма да дереферира аѡоматично стойността на
променливата. Референциите са скалари, така че започват с <code>$</code>.

#### Референции към масиви

На английски често се споменават като array refs за по-кратко.

    my @array = (1, 2, 3, 4);             # масив
    my $arrayref1 = \@array;              # референция към масив
    my $arrayref2 = ['a', 'b', 'c', 'd']; # референция към масив

    # Достъп до нулевия елемент ѿ масива
    print $array[0];       # ѿпечатва 1

    # Дерефериране и достъпване на елемент 0
    print $arrayref1->[0]; # ѿпечатва 1
    print $arrayref2->[0]; # ѿпечатва 'a'

    # Референция към масив в референция към масив
    my $arrays_in_arrays = [a, b, c, ['roo', 'woo', 'loo']];

    # Как да дереферираме референции към масиви
    my @array1 = @{ $arrays_in_arrays };      # (a, b, c ['roo', 'woo', 'loo'])
    my @array2 = @$arrays_in_arrays;          # същѿо, но с по-малко писане
    my @array3 = @{ $arrays_in_arrays->[3] }; # ('roo', 'woo', 'loo')

#### Референции към хешове

Също ще видите да ги споменават като hash refs за по-кратко.

    my %hash = (a => 1, b => 2, c => 3);        # хеш
    my $hashref1 = \%hash;                      # хеш-референция
    my $hashref2 = {x => 11, y => 12, z => 13}; # хеш-референция

    # Достъп до стойност
    print $hash{a};       # ѿпечатва 1

    # Дерефериране и достъп до стойност
    print $hashref1->{a}; # ѿпечатва 1
    print $hashref2->{x}; # ѿпечатва 11

    # хеш-референция в хеш-референция
    my $hashes_in_hashes = {
        a => 1,
        b => 2,
        c => { x => 1, y => 2 },
    };

    # Как да дереферираме хеш-референции
    my %hash1 = %{ $hashes_in_hashes };      # (a => 1, b => 2, c => {x => 1, y => 2})
    my %hash2 = %$hashes_in_hashes;          # същото, но с по-малко писане
    my %hash3 = %{ $hashes_in_hashes->{c} }; # (x => 1, y => 2)

#### Референции към код

Наричат ги още code refs, анонимни подпрограми, анонимни функции затваряния (closures), или обратни извиквания (callbacks).

    my $coderef = sub { print "stegasaurus" };
    # Дерефериране и изпълняване на подпрограма
    $coderef->(); # prints "stegasaurus"

#### Най-важнѿо за запомняне

З да усвоите тази тема е нужно малко наизустяване и и много практика.
Най-важните неща:

- Изразът <code>[ ... ]</code> създава референция към масив;
- Изразът <code>{ ... }</code> създава референция към хеш;
- Изразът <code>@$var</code> или <code>@{ ... }</code> дереферира масив;
- Изразът <code>%$var</code> или <code>%{ ... }</code> дереферира хеш.

